{"version":3,"sources":["useGameLogic.js","Button.js","App.js","index.js"],"names":["useGameLogic","gameTime","useState","time","setTime","gameRunning","setGameRunning","text","setText","wordCount","setWordCount","textAreaRef","useRef","handleChange","e","value","target","countWords","totalWords","trim","split","filter","word","length","startGame","current","disabled","focus","endGame","useEffect","setTimeout","Button","props","onClick","App","ref","onChange","ReactDOM","render","document","querySelector"],"mappings":"+KA4DeA,EA1DM,WAAoB,IAAnBC,EAAkB,uDAAP,GAAO,EACfC,mBAASD,GADM,mBAChCE,EADgC,KAC1BC,EAD0B,OAEDF,oBAAS,GAFR,mBAEhCG,EAFgC,KAEnBC,EAFmB,OAGfJ,mBAAS,IAHM,mBAGhCK,EAHgC,KAG1BC,EAH0B,OAILN,mBAAS,GAJJ,mBAIhCO,EAJgC,KAIrBC,EAJqB,KAKjCC,EAAcC,mBAEpB,SAASC,EAAaC,GAAI,IACjBC,EAAUD,EAAEE,OAAZD,MACRP,EAAQO,GAGT,SAASE,EAAWV,GAKnB,IAEMW,EAFQX,EAAKY,OAAOC,MAAM,KACJC,QAAO,SAACC,GAAD,MAAmB,KAATA,KACZC,OACjCb,EAAaQ,GAGd,SAASM,IAA0B,IAAhBvB,EAAe,uDAAJ,GAC7BG,EAAQH,GACRO,EAAQ,IACRE,EAAa,GACbJ,GAAe,GACfK,EAAYc,QAAQC,UAAW,EAC/Bf,EAAYc,QAAQE,QAGrB,SAASC,IACRX,EAAWV,GACXD,GAAe,GAahB,OAVAuB,qBAAU,WACLxB,GAAeF,EAAO,EACzB2B,YAAW,WACV1B,GAAQ,SAACD,GAAD,OAAUA,EAAO,OACvB,KACgB,IAATA,GACVyB,MAEC,CAACvB,EAAaF,IAEV,CACNQ,cACAJ,OACAM,eACAR,cACAF,OACAqB,YACAf,cC1CasB,EAZD,SAACC,GACd,OACE,4BACCC,QAAU,WACTD,EAAMR,UAAUQ,EAAM/B,WAEvByB,SAAYM,EAAM3B,aAElB2B,EAAM/B,SAAN,UAAoB+B,EAAM/B,SAA1B,QAA2C,UCuChCiC,G,KA5CH,WAAO,IAAD,EASblC,IAPHW,EAFgB,EAEhBA,YACAJ,EAHgB,EAGhBA,KACAM,EAJgB,EAIhBA,aACAR,EALgB,EAKhBA,YACAF,EANgB,EAMhBA,KACAqB,EAPgB,EAOhBA,UACAf,EARgB,EAQhBA,UAGD,OACC,6BACC,iDACA,8BACC0B,IAAKxB,EACLI,MAAOR,EACP6B,SAAUvB,EACVa,UAAWrB,IAEZ,6DACA,kBAAC,EAAD,CACCJ,SAAU,GACVuB,UAAWA,EACXnB,YAAaA,IAEd,kBAAC,EAAD,CACCJ,SAAU,GACVuB,UAAWA,EACXnB,YAAaA,IAEd,kBAAC,EAAD,CACCJ,SAAU,GACVuB,UAAWA,EACXnB,YAAaA,IAGd,+CAAqBF,EAArB,QACA,kBAAC,EAAD,CAAQqB,UAAWA,EAAWnB,YAAaA,IAC3C,4CAAkBI,EAAlB,QCxCH4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.760db7f7.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useGameLogic = (gameTime = 15) => {\r\n\tconst [time, setTime] = useState(gameTime);\r\n\tconst [gameRunning, setGameRunning] = useState(false);\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [wordCount, setWordCount] = useState(0);\r\n\tconst textAreaRef = useRef();\r\n\r\n\tfunction handleChange(e) {\r\n\t\tconst { value } = e.target;\r\n\t\tsetText(value);\r\n\t}\r\n\r\n\tfunction countWords(text) {\r\n\t\t// let words = text.replace(/(^\\s*)|(\\s*$)/gi,\"\");\r\n\t\t// words = words.replace(/[ ]{2,}/gi,\" \");\r\n\t\t// words = words.replace(/\\n /,\"\\n\");\r\n\t\t// const totalWords = words.split(\" \").length\r\n\t\tconst words = text.trim().split(\" \");\r\n\t\tconst filteredWords = words.filter((word) => word !== \"\");\r\n\t\tconst totalWords = filteredWords.length;\r\n\t\tsetWordCount(totalWords);\r\n\t}\r\n\r\n\tfunction startGame(gameTime = 15) {\r\n\t\tsetTime(gameTime);\r\n\t\tsetText(\"\");\r\n\t\tsetWordCount(0);\r\n\t\tsetGameRunning(true);\r\n\t\ttextAreaRef.current.disabled = false;\r\n\t\ttextAreaRef.current.focus();\r\n\t}\r\n\r\n\tfunction endGame() {\r\n\t\tcountWords(text);\r\n\t\tsetGameRunning(false);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (gameRunning && time > 0) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetTime((time) => time - 1);\r\n\t\t\t}, 1000);\r\n\t\t} else if (time === 0) {\r\n\t\t\tendGame();\r\n\t\t}\r\n\t}, [gameRunning, time]);\r\n\r\n\treturn {\r\n\t\ttextAreaRef,\r\n\t\ttext,\r\n\t\thandleChange,\r\n\t\tgameRunning,\r\n\t\ttime,\r\n\t\tstartGame,\r\n\t\twordCount,\r\n\t};\r\n};\r\n\r\nexport default useGameLogic;\r\n","import React from 'react'\r\n\r\nconst Button =(props)=> {\r\n\treturn (\r\n\t\t\t<button\r\n\t\t\t\tonClick ={()=> {\r\n\t\t\t\t\tprops.startGame(props.gameTime);\r\n\t\t\t\t}}\r\n\t\t\t\tdisabled = {props.gameRunning}\r\n\t\t\t>\r\n\t\t\t{props.gameTime ? `${props.gameTime} Sec` : \"Start\"}</button>\r\n\t\t)\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect, useRef } from \"react\";\r\nimport useGameLogic from \"./useGameLogic\";\r\nimport Button from \"./Button\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n\tconst {\r\n\t\ttextAreaRef,\r\n\t\ttext,\r\n\t\thandleChange,\r\n\t\tgameRunning,\r\n\t\ttime,\r\n\t\tstartGame,\r\n\t\twordCount,\r\n\t} = useGameLogic();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Speed Typing Game</h1>\r\n\t\t\t<textarea\r\n\t\t\t\tref={textAreaRef}\r\n\t\t\t\tvalue={text}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tdisabled={!gameRunning}\r\n\t\t\t/>\r\n\t\t\t<h3>Choose your desired test time</h3>\r\n\t\t\t<Button\r\n\t\t\t\tgameTime={30}\r\n\t\t\t\tstartGame={startGame}\r\n\t\t\t\tgameRunning={gameRunning}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tgameTime={45}\r\n\t\t\t\tstartGame={startGame}\r\n\t\t\t\tgameRunning={gameRunning}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tgameTime={60}\r\n\t\t\t\tstartGame={startGame}\r\n\t\t\t\tgameRunning={gameRunning}\r\n\t\t\t/>\r\n\r\n\t\t\t<h2>Time Remaining: {time} sec</h2>\r\n\t\t\t<Button startGame={startGame} gameRunning={gameRunning} />\r\n\t\t\t<h4>Total Words: {wordCount} </h4>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}